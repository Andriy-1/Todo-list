function body_lock_add(e){document.querySelector("body")}let unlock=!0;if(location.hash){const e=location.hash.replace("#","");document.querySelector(".popup_"+e)?popup_open(e):document.querySelector("div."+e)&&_goto(document.querySelector("."+e),500,"")}let popup_link=document.querySelectorAll("._popup-link"),popups=document.querySelectorAll(".popup");for(let e=0;e<popup_link.length;e++){const t=popup_link[e];t.addEventListener("click",(function(e){if(unlock){popup_open(t.getAttribute("href").replace("#",""),t.getAttribute("data-video"))}e.preventDefault()}))}for(let e=0;e<popups.length;e++){popups[e].addEventListener("click",(function(e){e.target.closest(".popup__body")||popup_close(e.target.closest(".popup"))}))}function popup_open(e,t=""){document.querySelectorAll(".popup._active").length>0&&popup_close("",!1);let o=document.querySelector(".popup_"+e);if(o&&unlock){if(""!=t&&null!=t){document.querySelector(".popup_video").querySelector(".popup__video").innerHTML='<iframe src="https://www.youtube.com/embed/'+t+'?autoplay=1"  allow="autoplay; encrypted-media" allowfullscreen></iframe>'}document.querySelector(".menu__body._active")||body_lock_add(500),o.classList.add("_active"),history.pushState("","","#"+e)}}function popup_close(e,t=!0){if(unlock){if(e){let t=e.querySelector(".popup__video");t&&(t.innerHTML=""),e.classList.remove("_active")}else for(let e=0;e<popups.length;e++){const t=popups[e];let o=t.querySelector(".popup__video");o&&(o.innerHTML=""),t.classList.remove("_active")}!document.querySelector(".menu__body._active")&&t&&body_lock_remove(500),history.pushState("","",window.location.href.split("#")[0])}}let popup_close_icon=document.querySelectorAll(".popup__close,._popup-close");if(popup_close_icon)for(let e=0;e<popup_close_icon.length;e++){const t=popup_close_icon[e];t.addEventListener("click",(function(){popup_close(t.closest(".popup"))}))}document.addEventListener("keydown",(function(e){27==e.which&&popup_close()}));const date=document.querySelector(".date"),masiveDate={};let newDate=new Date;const dateAll=(e=new Date)=>{masiveDate.day=e.getDay(),masiveDate.numberDay=e.getDate(),masiveDate.month=e.getMonth(),masiveDate.year=e.getFullYear(),masiveDate.timeHours=e.getHours(),masiveDate.timeMinutes=e.getMinutes()};let currentDay;dateAll(),0===masiveDate.day?currentDay="Sunday":1===masiveDate.day?currentDay="Monday":2===masiveDate.day?currentDay="Tuesday":3===masiveDate.day?currentDay="Wednesday":4===masiveDate.day?currentDay="Thursday":5===masiveDate.day?currentDay="Friday":6===masiveDate.day&&(currentDay="Saturday"),date.innerHTML=`<div>\n\t\t<span class="date__day">${currentDay}</span>\n\t\t<span class="date__number-day">${masiveDate.numberDay>10?masiveDate.numberDay:"0"+masiveDate.numberDay}</span>\n\t\t<span class="date__year">${masiveDate.year}</span>\n\t</div>\n\t<div class="date__time time">\n\t\t<span class="time__hours">${masiveDate.timeHours>10?masiveDate.timeHours:"0"+masiveDate.timeHours}</span> :\n\t\t<span class="time__minutes">${masiveDate.timeMinutes>10?masiveDate.timeMinutes:"0"+masiveDate.timeMinutes}</span>\n\t</div>`;const input=document.getElementById("input"),btn=document.getElementById("btn"),taskBox=document.querySelector(".todo");let tasks;tasks=localStorage.tasks?JSON.parse(localStorage.getItem("tasks")):[];let todoItemElems=[];function Task(e){this.discription=e,this.complited=!1}const createTemplate=(e,t)=>`\n\t<div class="todo__item ${e.complited?"_checked":""}">\n\t<span onclick="compliteTask(${t})"  class="todo__input-style-checkbox ${e.complited?"_checked":""}"></span>\n\t<div class="todo__description ${e.complited?"_active":""}">\n\t${e.discription}\t\n\t</div>\n\t<button onclick="deliteTask(${t})" class="todo__btn">Delete</button>\n</div>\n\t`,fileterTask=()=>{const e=tasks.length&&tasks.filter((e=>0==e.complited)),t=tasks.length&&tasks.filter((e=>1==e.complited));tasks=[...e,...t]},fillHtmlList=()=>{taskBox.innerHTML="",tasks.length>0&&(fileterTask(),tasks.forEach(((e,t)=>{taskBox.innerHTML+=createTemplate(e,t)})),todoItemElems=document.querySelectorAll(".todo__item"))};fillHtmlList();const updateLocal=()=>{localStorage.setItem("tasks",JSON.stringify(tasks))},compliteTask=e=>{tasks[e].complited=!tasks[e].complited,tasks[e].complited?todoItemElems[e].classList.add("checked"):todoItemElems[e].classList.remove("checked"),updateLocal(),fillHtmlList()};btn.addEventListener("click",(()=>{tasks.push(new Task(input.value)),updateLocal(),fillHtmlList(),input.value=""}));const deliteTask=e=>{todoItemElems[e].classList.add("_active"),setTimeout((()=>{tasks.splice(e,1),updateLocal(),fillHtmlList()}),500)};